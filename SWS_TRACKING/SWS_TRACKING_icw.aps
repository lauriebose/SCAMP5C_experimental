// s5c-make icw
!include('scamp5c/scamp5c_compile_config.aps')
apron.config_begin
    sim.pix_source_webcam
    host.set_frame_rate(30)
    window_1 = host.add_display('W1')
    window_2 = host.add_display('W2')
     window_3 = host.add_display('W3')
    slider_1 = host.add_slider('threshold', -120, 120, -120)
    slider_2 = host.add_slider('flood_iterations', 1, 10, 4)
    
    
    data_1 = host.add_datasheet('coords',1,2,ROW_STREAM)
apron.config_end

!include('scamp5c/scamp5c_framework.aps')

//////////////////////////////////////////////////////////////////
ipu.reset_loop_counter
spi.reset

spi.set_transfer_size(20)
//////////////////////////////////////////////////////////////////

#frame_loop
   
    // use double frame trigger to maintain the exposure time
//     ipu.wait_frame_trigger
//     rpix
   
    //ipu.wait_frame_trigger
    //rpix()
    
    ipu.delay_5ms
	ipu.delay_5ms
	
    rpix(B,C)
    
    ////////////////////////////////////
   
    s0 = usb.slider(slider_1)
    E = in(s0)
    D = sub(C,E)
    where(D)
        R5 = FLAG
    all
    
    ////////////////////////////////////
    
//     usb.dout(R5,window_2)
//     all
    
    ////////////////////////////////////
    
    //FLAG BOUNDARIES OF THE IMAGE TO USE AS FLOODING SOURCE
    R7 = 0
    R10 = ipu.pixel_select(0,0,0,255)
    R11 = ipu.pixel_select(255,0,0,255)
   	R7 = or(R10,R11)
   	R10 = ipu.pixel_select(0,0,255,0)
 	R11 = or(R10,R7)
 	R10 = ipu.pixel_select(0,255,255,0)
   	R7 = or(R10,R11)
   	
   	////////////////////////////////////
    
   	
    R10 = R5
    R5 = not(R10)
    s5 = usb.slider(slider_2)
    #flooding_loop
    _nop
   
	    R10 = pro.flood_from_source(R5,R7)
	    R11 = pro.flood_from_source(R5,R10)
	    R10 = pro.flood_from_source(R5,R11)
	    R11 = pro.flood_from_source(R5,R10)
	   
	    R7 = R11
	   
	    R10 = not(R11)
	    R9 = and(R5,R10)
	    R5 = not(R9)
   
     _sub(s5,1)
     _jump(nc,#flooding_loop)
   
    ////////////////////////////////////
    
   
    R7 = not(R5)
    spi.begin
    spi.scan_target(R7)
    spi.end
    _nop
    
    ////////////////////////////////////
    
    //usb.aout(C ,window_1)
    
//     usb.dout(R5 ,window_3)
//     all

//  	  usb.stream_begin(data_1)
//         usb.stream_send(s15)
//         usb.stream_send(s14)
//    
_jump(#frame_loop)
   
apron.genereate_host
apron.compile_host